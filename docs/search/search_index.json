{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Human-GEM User Guide Note UNDER DEVELOPMENT Overview This guide contains instructions and examples of how to use Human-GEM. Installation Getting started Running FBA GEM extraction using tINIT GEM comparison Citation J. L. Robinson, et al. An atlas of human metabolism. Sci. Signal. 13, eaaz1482 (2020). doi:10.1126/scisignal.aaz1482","title":"Overview"},{"location":"#human-gem-user-guide","text":"Note UNDER DEVELOPMENT","title":"Human-GEM User Guide"},{"location":"#overview","text":"This guide contains instructions and examples of how to use Human-GEM. Installation Getting started Running FBA GEM extraction using tINIT GEM comparison","title":"Overview"},{"location":"#citation","text":"J. L. Robinson, et al. An atlas of human metabolism. Sci. Signal. 13, eaaz1482 (2020). doi:10.1126/scisignal.aaz1482","title":"Citation"},{"location":"gem_comparison/","text":"GEM Comparison Coming soon ...","title":"GEM comparison"},{"location":"gem_comparison/#gem-comparison","text":"Coming soon ...","title":"GEM Comparison"},{"location":"gem_extraction/","text":"GEM Extraction Coming soon ...","title":"GEM extraction using tINIT"},{"location":"gem_extraction/#gem-extraction","text":"Coming soon ...","title":"GEM Extraction"},{"location":"getting_started/","text":"Getting Started Make sure you have completed the installation process before continuing. The commands described on this page are all run from the MATLAB command prompt, unless otherwise noted. Loading Human-GEM into MATLAB Note All the model file formats described below are on the master branch of the Human-GEM repository. Note that only the .yml version is available on branches other than master (e.g., devel ), to facilitate tracking of model changes. From the HumanGEM.mat file (recommended) The quickest and easiest way to load the Human-GEM model is from the .mat file. load('HumanGEM.mat'); This will load the model as a structure named ihuman . ihuman % ihuman = % % struct with fields: % % id: 'Human-GEM' % description: 'Generic genome-scale metabolic model of Homo sapiens' % rxns: {13417\u00d71 cell} % mets: {10138\u00d71 cell} % S: [10138\u00d713417 double] % lb: [13417\u00d71 double] % ub: [13417\u00d71 double] % rev: [13417\u00d71 double] % c: [13417\u00d71 double] % b: [10138\u00d71 double] % comps: {10\u00d71 cell} % compNames: {10\u00d71 cell} % rxnNames: {13417\u00d71 cell} % grRules: {13417\u00d71 cell} % rxnGeneMat: [13417\u00d73625 double] % subSystems: {13417\u00d71 cell} % eccodes: {13417\u00d71 cell} % genes: {3625\u00d71 cell} % metNames: {10138\u00d71 cell} % metComps: [10138\u00d71 double] % inchis: {10138\u00d71 cell} % metFormulas: {10138\u00d71 cell} % unconstrained: [10138\u00d71 double] % rxnReferences: {13417\u00d71 cell} % rxnFrom: {13417\u00d71 cell} % metFrom: {10138\u00d71 cell} % rxnConfidenceScores: [13417\u00d71 double] % metCharges: [10138\u00d71 int64] % version: '1.3.1' % annotation: [1\u00d71 struct] From the HumanGEM.yml file (recommended if not on master branch) The yaml version of Human-GEM is loaded using the importHumanYaml function. ihuman = importHumanYaml('HumanGEM.yml'); % Start importing... % metaData % metabolites % reactions % genes % compartments % % importing completed % follow-up processing... Done! From the HumanGEM.xml (SBML) file The .xml (SBML) version of Human-GEM is loaded using the RAVEN importHumanYaml function. ihuman = importModel(which('HumanGEM.xml')); % The model contains 0 errors and 1 warnings. % % WARNING: Potentially problematic \") AND (\" in the grRules for reaction(s): % HMR_7161 % HMR_7162 % ATPasel Note The warning regarding the grRules can be ignored. Some packages are a bit more strict in their gene-reaction rule formulation, but Human-GEM functions have no such restrictions. Note We include the which() command around the model filename to provide its full path because some functions cannot otherwise find the file. From the HumanGEM.xlsx file The .xslx (Excel) version of Human-GEM is loaded using the RAVEN importExcelModel function. ihuman = importExcelModel(which('HumanGEM.xlsx')); % WARNING: Potentially problematic \") AND (\" in the grRules for reaction(s): % HMR_7161 % HMR_7162 % ATPasel % % WARNING: The following InChI strings are associated to more than one unique metabolite name: % 1S/C27H46O2/c1-18(2)7-6-14-27(5,29)24-11-10-22-21-9-8-19-17-20(28)12-15-25(19,3)23(21)13-16-26(22,24)4/h8,18,20-24,28-29H,6-7,9-17H2,1-5H3/t20-,21-,22-,23-,24-,25-,26-,27-/m0/s1 % 1S/C42H58NO/c1-32(20-22-39-35(4)17-12-25-41(39,6)7)14-10-16-34(3)30-38-31-37(24-27-43(38)28-29-44)19-11-15-33(2)21-23-40-36(5)18-13-26-42(40,8)9/h10-11,14-16,19-24,27,30-31,44H,12-13,17-18,25-26,28-29H2,1-9H3/q+1 From the HumanGEM.txt file There is no function to import the .txt version of the model. The HumanGEM.txt file is supplied for those who need or prefer a more human-readable plain-text format, but is not intended for loading into MATLAB.","title":"Getting started"},{"location":"getting_started/#getting-started","text":"Make sure you have completed the installation process before continuing. The commands described on this page are all run from the MATLAB command prompt, unless otherwise noted.","title":"Getting Started"},{"location":"getting_started/#loading-human-gem-into-matlab","text":"Note All the model file formats described below are on the master branch of the Human-GEM repository. Note that only the .yml version is available on branches other than master (e.g., devel ), to facilitate tracking of model changes.","title":"Loading Human-GEM into MATLAB"},{"location":"getting_started/#from-the-humangemmat-file-recommended","text":"The quickest and easiest way to load the Human-GEM model is from the .mat file. load('HumanGEM.mat'); This will load the model as a structure named ihuman . ihuman % ihuman = % % struct with fields: % % id: 'Human-GEM' % description: 'Generic genome-scale metabolic model of Homo sapiens' % rxns: {13417\u00d71 cell} % mets: {10138\u00d71 cell} % S: [10138\u00d713417 double] % lb: [13417\u00d71 double] % ub: [13417\u00d71 double] % rev: [13417\u00d71 double] % c: [13417\u00d71 double] % b: [10138\u00d71 double] % comps: {10\u00d71 cell} % compNames: {10\u00d71 cell} % rxnNames: {13417\u00d71 cell} % grRules: {13417\u00d71 cell} % rxnGeneMat: [13417\u00d73625 double] % subSystems: {13417\u00d71 cell} % eccodes: {13417\u00d71 cell} % genes: {3625\u00d71 cell} % metNames: {10138\u00d71 cell} % metComps: [10138\u00d71 double] % inchis: {10138\u00d71 cell} % metFormulas: {10138\u00d71 cell} % unconstrained: [10138\u00d71 double] % rxnReferences: {13417\u00d71 cell} % rxnFrom: {13417\u00d71 cell} % metFrom: {10138\u00d71 cell} % rxnConfidenceScores: [13417\u00d71 double] % metCharges: [10138\u00d71 int64] % version: '1.3.1' % annotation: [1\u00d71 struct]","title":"From the HumanGEM.mat file (recommended)"},{"location":"getting_started/#from-the-humangemyml-file-recommended-if-not-on-master-branch","text":"The yaml version of Human-GEM is loaded using the importHumanYaml function. ihuman = importHumanYaml('HumanGEM.yml'); % Start importing... % metaData % metabolites % reactions % genes % compartments % % importing completed % follow-up processing... Done!","title":"From the HumanGEM.yml file (recommended if not on master branch)"},{"location":"getting_started/#from-the-humangemxml-sbml-file","text":"The .xml (SBML) version of Human-GEM is loaded using the RAVEN importHumanYaml function. ihuman = importModel(which('HumanGEM.xml')); % The model contains 0 errors and 1 warnings. % % WARNING: Potentially problematic \") AND (\" in the grRules for reaction(s): % HMR_7161 % HMR_7162 % ATPasel Note The warning regarding the grRules can be ignored. Some packages are a bit more strict in their gene-reaction rule formulation, but Human-GEM functions have no such restrictions. Note We include the which() command around the model filename to provide its full path because some functions cannot otherwise find the file.","title":"From the HumanGEM.xml (SBML) file"},{"location":"getting_started/#from-the-humangemxlsx-file","text":"The .xslx (Excel) version of Human-GEM is loaded using the RAVEN importExcelModel function. ihuman = importExcelModel(which('HumanGEM.xlsx')); % WARNING: Potentially problematic \") AND (\" in the grRules for reaction(s): % HMR_7161 % HMR_7162 % ATPasel % % WARNING: The following InChI strings are associated to more than one unique metabolite name: % 1S/C27H46O2/c1-18(2)7-6-14-27(5,29)24-11-10-22-21-9-8-19-17-20(28)12-15-25(19,3)23(21)13-16-26(22,24)4/h8,18,20-24,28-29H,6-7,9-17H2,1-5H3/t20-,21-,22-,23-,24-,25-,26-,27-/m0/s1 % 1S/C42H58NO/c1-32(20-22-39-35(4)17-12-25-41(39,6)7)14-10-16-34(3)30-38-31-37(24-27-43(38)28-29-44)19-11-15-33(2)21-23-40-36(5)18-13-26-42(40,8)9/h10-11,14-16,19-24,27,30-31,44H,12-13,17-18,25-26,28-29H2,1-9H3/q+1","title":"From the HumanGEM.xlsx file"},{"location":"getting_started/#from-the-humangemtxt-file","text":"There is no function to import the .txt version of the model. The HumanGEM.txt file is supplied for those who need or prefer a more human-readable plain-text format, but is not intended for loading into MATLAB.","title":"From the HumanGEM.txt file"},{"location":"installation/","text":"Installation Human-GEM The Human-GEM model is maintained in a GitHub repository to track changes and facilitate collaboration. In addition to several different model formats (e.g., .mat , .xml , .yml ), the repository contains a number of functions and data files that support Human-GEM analysis, maintenance, editing, and other actions. We therefore recommend cloning the GitHub repository to gain full functionality and easy access to the most updated version of Human-GEM. 1. Clone the repository (recommended) Clone the repository using git . Navigate to the directory where you would like to save the Human-GEM repository, and in the command line/terminal run: git clone https://github.com/SysBioChalmers/Human-GEM.git This will create a copy of the repository contents on your local machine. 1b. Alternative: Download as a .zip The latest release of the repository can be downloaded as a .zip or .tar.gz file . Download the file using the link, and unzip/expand the file. 2. Add the repository to the MATLAB path In order for MATLAB to find and use the functions and files in the repository directory (and subdirectories), they need to be added to the PATH. In MATLAB, select HOME from the top menu bar, and choose Set Path and then Add with Subfolders... . Choose the code/ , data/ , and modelFiles/ subdirectories in the Human-GEM folder to be added to the path, and click Save when finished. Alternatively, you can run the following lines in MATLAB: cd /my/path/Human-GEM % replace \"/my/path/\" with the actual path to the Human-GEM folder addpath(strjoin(cellfun(@genpath, split(ls), 'UniformOutput', false), '')); savepath Ignore the Warning: Name is nonexistent or not a directory messages. Required software MATLAB [R2018 or newer] MATLAB is the primary software used for working with Human-GEM. Unfortunately, MATLAB is not free, though a ( 30-day trial ) is available. The RAVEN Toolbox [v2.3.1 or newer] The Human-GEM model files are provided in RAVEN-friendly format, and many of the functions in the Human-GEM repository depend on the RAVEN Toolbox. Ensure that the RAVEN Toolbox is installed and added to your MATLAB path. See the RAVEN installation instructions for more detail. Additional dependencies The COBRA Toolbox The COBRA Toolbox is not required for most of the functions associated with Human-GEM. However, it offers many additional analysis tools that are not available in RAVEN. Important The Human-GEM model files are formatted for use with the RAVEN Toolbox. Before using the model with the COBRA toolbox, convert the model to a COBRA-friendly format in MATLAB using the ravenCobraWrapper function from the RAVEN Toolbox: cobraModel = ravenCobraWrapper(ravenModel); Note There is an ongoing effort to align the model structures of RAVEN and COBRA to eliminate compatibility issues, so hopefully this will soon be a problem of the past. Linear optimization solver A solver is required to run flux balance analysis (FBA), GEM extraction (using tINIT), or any other function involving an optimization. Compatible solvers are Gurobi Optimizer, MOSEK, or GLPK. For instructions on how to set up a solver and obtain a license (if required), see the RAVEN instructions .","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#human-gem","text":"The Human-GEM model is maintained in a GitHub repository to track changes and facilitate collaboration. In addition to several different model formats (e.g., .mat , .xml , .yml ), the repository contains a number of functions and data files that support Human-GEM analysis, maintenance, editing, and other actions. We therefore recommend cloning the GitHub repository to gain full functionality and easy access to the most updated version of Human-GEM.","title":"Human-GEM"},{"location":"installation/#1-clone-the-repository-recommended","text":"Clone the repository using git . Navigate to the directory where you would like to save the Human-GEM repository, and in the command line/terminal run: git clone https://github.com/SysBioChalmers/Human-GEM.git This will create a copy of the repository contents on your local machine.","title":"1. Clone the repository (recommended)"},{"location":"installation/#1b-alternative-download-as-a-zip","text":"The latest release of the repository can be downloaded as a .zip or .tar.gz file . Download the file using the link, and unzip/expand the file.","title":"1b. Alternative: Download as a .zip"},{"location":"installation/#2-add-the-repository-to-the-matlab-path","text":"In order for MATLAB to find and use the functions and files in the repository directory (and subdirectories), they need to be added to the PATH. In MATLAB, select HOME from the top menu bar, and choose Set Path and then Add with Subfolders... . Choose the code/ , data/ , and modelFiles/ subdirectories in the Human-GEM folder to be added to the path, and click Save when finished. Alternatively, you can run the following lines in MATLAB: cd /my/path/Human-GEM % replace \"/my/path/\" with the actual path to the Human-GEM folder addpath(strjoin(cellfun(@genpath, split(ls), 'UniformOutput', false), '')); savepath Ignore the Warning: Name is nonexistent or not a directory messages.","title":"2. Add the repository to the MATLAB path"},{"location":"installation/#required-software","text":"","title":"Required software"},{"location":"installation/#matlab","text":"[R2018 or newer] MATLAB is the primary software used for working with Human-GEM. Unfortunately, MATLAB is not free, though a ( 30-day trial ) is available.","title":"MATLAB"},{"location":"installation/#the-raven-toolbox","text":"[v2.3.1 or newer] The Human-GEM model files are provided in RAVEN-friendly format, and many of the functions in the Human-GEM repository depend on the RAVEN Toolbox. Ensure that the RAVEN Toolbox is installed and added to your MATLAB path. See the RAVEN installation instructions for more detail.","title":"The RAVEN Toolbox"},{"location":"installation/#additional-dependencies","text":"","title":"Additional dependencies"},{"location":"installation/#the-cobra-toolbox","text":"The COBRA Toolbox is not required for most of the functions associated with Human-GEM. However, it offers many additional analysis tools that are not available in RAVEN. Important The Human-GEM model files are formatted for use with the RAVEN Toolbox. Before using the model with the COBRA toolbox, convert the model to a COBRA-friendly format in MATLAB using the ravenCobraWrapper function from the RAVEN Toolbox: cobraModel = ravenCobraWrapper(ravenModel); Note There is an ongoing effort to align the model structures of RAVEN and COBRA to eliminate compatibility issues, so hopefully this will soon be a problem of the past.","title":"The COBRA Toolbox"},{"location":"installation/#linear-optimization-solver","text":"A solver is required to run flux balance analysis (FBA), GEM extraction (using tINIT), or any other function involving an optimization. Compatible solvers are Gurobi Optimizer, MOSEK, or GLPK. For instructions on how to set up a solver and obtain a license (if required), see the RAVEN instructions .","title":"Linear optimization solver"},{"location":"running_fba/","text":"Running Flux Balance Analysis (FBA) Coming soon ...","title":"Running FBA"},{"location":"running_fba/#running-flux-balance-analysis-fba","text":"Coming soon ...","title":"Running Flux Balance Analysis (FBA)"}]}